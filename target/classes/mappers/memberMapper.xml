<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.josun.mapper.MemberMapper">
	<select id="idCheck" resultType="int">
		select count(*) from member where id = #{id}
	</select>
	<insert id="registerMember">
		insert into member(name, id, pw, pw_hint_q, pw_hint_a, address, phone, email) values(#{name}, #{id}, #{pw}, #{pwHintQ}, #{pwHintA}, #{address}, #{phone}, #{email})
	</insert>
	
	<select id="loginAction" resultType="com.josun.dto.MemberDTO">
		select name, address, phone, email from member where id = #{id} and pw = #{pw}
	</select>
	
	<select id="findId" resultType="string">
		select id from member where name = #{name} and phone = #{phone} and email = #{email}
	</select>
	
	<select id="findPw" resultType="string">
		select pw from member where name = #{name} and id = #{id} and pw_hint_q = #{pwHintQ} and pw_hint_a = #{pwHintA}
	</select>
	
	<select id="checkPw" resultType="string">
		select pw from member where id = #{id}
	</select>
	
	<update id="updateMem">
		update member set name = #{name}, address = #{address}, phone = #{phone}, email = #{email} where id = #{id}
	</update>
	
	<update id="updatePw">
		update member set pw = #{pw} where id = #{id}
	</update>
	
	<delete id="deleteMem">
		delete from member where id = #{id} and pw = #{pw}
	</delete>
	
	<select id="adminMemberList" resultType="com.josun.dto.MemberDTO">
		<![CDATA[select * from (select rownum rnum, m.* from(select name, id, phone, email, address from member where ${searchKey} like #{searchValue})m) where rnum >= ${start} and rnum <= ${end}]]>
	</select>
	<select id="getDataCount" resultType="int">
		select count(*) as totalCount from member where ${searchKey} like #{searchValue}
	</select>
	
	<select id="reserveConfirm" resultType="map">
		select r.num, r.name as username, r.startdate, r.enddate, r.adultcnt, r.childrencnt, r.total_pay, r2.name, r2.img, r2.r_size, r2.detail_view, r.room_number
		from reservation r, room r2 where r.room_number = r2.num and
		r.member_id = #{id} and (r.startdate BETWEEN to_date(#{searchStartDate}) and to_date(#{searchEndDate}) or r.enddate BETWEEN to_date(#{searchStartDate}) and to_date(#{searchEndDate})) order by r.startdate desc
	</select>
	<update id="reserveCancel">
		update reservation set name = '#' where num = ${num}
	</update>
	<delete id="reserveRoomCancel">
		delete from reserved_room where reserved_date = #{addDay} and num = ${roomNumber}
	</delete>
</mapper>

